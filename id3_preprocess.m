%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% id3算法数据预处理 %%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     程序功能      %%%%%%%%%%%%%%%%%%
%%%将三位一组的碱基序列，用一位数字进行替代
%%%映射规则A:001->1,C:010->2,T:100->4,G:000->0
%%%例如原始数据是2000个样本，180列碱基+最后一列类别
%%%判决类别有3类，分别用数字1 2 3 表示
%%%预处理后，matrix行数是2000，列数是60列碱基数字+最后一列类别

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     输入参数说明   %%%%%%%%%%%%%%%%%%
%%%%% x=1,对训练数据集进行预处理
%%%%% x=2,对测试数据集进行预处理

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     输出参数说明   %%%%%%%%%%%%%%%%%%%
% matrix： 样本数*（属性数+判决类别数）
% attributes: 不同属性；

function [ matrix,attributes] = id3_preprocess(x)
%%%%%%%此时的A是训练数据集，维数是2000*181，最后一列是类别标号
    if(x==1)
        A = xlsread('dna_data.xlsx');   
    end
    
%%%%%%%此时的A是测试数据集，维数是1186*181，最后一列是类别标号
    if(x==2)
        A = xlsread('dna_test.xlsx');  
    end
    
    [m,n]=size(A);  %% m表示行数，n表示列数
    B_one = A(:,1:n-1);    %B_one的维数是2000*180，内容是纯二进制数
    C = A(:,n);    %C是判决类别，有1 2 3 三个类别，维数是2000*1
    m_new = (n-1)*m/3;
    n_new = (n-1)/3;
    B_two = reshape(B_one',3,m_new);
    B_three = B_two'*[4;2;1];
    B_four = reshape(B_three,n_new,[]);
    B_five = B_four';      %B_five的维数是2000*60
    %%%%%attributes是cell类型，前面60位是属性，最后第61位是类别
    attributes = {'第1列','第2列','第3列','第4列','第5列','第6列','第7列','第8列','第9列','第10列','第11列','第12列','第13列','第14列','第15列','第16列','第17列','第18列','第19列','第20列','第21列','第22列','第23列','第24列','第25列','第26列','第27列','第28列','第29列','第30列','第31列','第32列','第33列','第34列','第35列','第36列','第37列','第38列','第39列','第40列','第41列','第42列','第43列','第44列','第45列','第46列','第47列','第48列','第49列','第50列','第51列','第52列','第53列','第54列','第55列','第56列','第57列','第58列','第59列','第60列'};
    matrix = [B_five,C];
end

